@model Education.ViewModels.PaperViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>PaperViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="trueorfalse-question">
            <h5>判断题</h5>
            @if (Model.TrueOrFalseQuestions.Any())
            {
                @for (int i = 0; i < Model.TrueOrFalseQuestions.Count; i++)
                {
                    <div class="form-group trueorfalse-quesion-content">
                        @Html.LabelFor(model => model.TrueOrFalseQuestions[i].Content, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.TrueOrFalseQuestions[i].Content, 3, 10, htmlAttributes: new { @class = "form-control", placeholder = "在这里输入题目内容" })
                            @Html.ValidationMessageFor(model => model.TrueOrFalseQuestions[i].Content, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group trueorfalse-quesion-answer">
                        @Html.LabelFor(model => model.TrueOrFalseQuestions[i].IsCorrect, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TrueOrFalseQuestions[i].IsCorrect)
                            @Html.ValidationMessageFor(model => model.TrueOrFalseQuestions[i].IsCorrect, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="form-group trueorfalse-quesion-content">
                    @Html.LabelFor(model => model.TrueOrFalseQuestions[0].Content, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.TrueOrFalseQuestions[0].Content, 3, 10, htmlAttributes: new { @class = "form-control", placeholder = "在这里输入题目内容" })
                        @Html.ValidationMessageFor(model => model.TrueOrFalseQuestions[0].Content, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group trueorfalse-quesion-answer">
                    @Html.LabelFor(model => model.TrueOrFalseQuestions[0].IsCorrect, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TrueOrFalseQuestions[0].IsCorrect)
                        @Html.ValidationMessageFor(model => model.TrueOrFalseQuestions[0].IsCorrect, "", new { @class = "text-danger" })
                    </div>
                </div>
            }

            <div class="form-group" id="trueorfalse-question-createpanel">
                <div class="col-md-10 col-md-offset-2">
                    <input type="button" id="createtq" value="添加判断题" class="btn btn-primary" />
                </div>
            </div>
        </div>

        <div class="single-question">
            <h4>单选题</h4>
            @if (Model.SingleQuestions.Any())
            {

            }
            <div class="form-group single-question-content">
                @Html.LabelFor(model => model.SingleQuestions[0].Content, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.SingleQuestions[0].Content, 3, 10, htmlAttributes: new { @class = "form-control", placeholder = "在这里输入题目内容" })
                    @Html.ValidationMessageFor(model => model.SingleQuestions[0].Content, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group single-question-option">
                <label class="control-label col-md-2">选项A</label>
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.SingleQuestions[0].Options[0].OptionProperty, 1, 10, htmlAttributes: new { @class = "form-control", placeholder = "在这里输入选项A内容" })
                    @Html.ValidationMessageFor(model => model.SingleQuestions[0].Options[0].OptionProperty, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.RadioButtonFor(model => model.SingleQuestions[0].CorrectAnswer, 1)
                </div>
            </div>
            <div class="form-group single-question-option">
                <label class="control-label col-md-2">选项B</label>
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.SingleQuestions[0].Options[1].OptionProperty, 1, 10, htmlAttributes: new { @class = "form-control", placeholder = "在这里输入选项B内容" })
                    @Html.ValidationMessageFor(model => model.SingleQuestions[0].Options[1].OptionProperty, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.RadioButtonFor(model => model.SingleQuestions[0].CorrectAnswer, 2)
                </div>
            </div>
            <div class="form-group single-question-option">
                <label class="control-label col-md-2">选项C</label>
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.SingleQuestions[0].Options[2].OptionProperty, 1, 10, htmlAttributes: new { @class = "form-control", placeholder = "在这里输入选项C内容" })
                    @Html.ValidationMessageFor(model => model.SingleQuestions[0].Options[2].OptionProperty, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.RadioButtonFor(model => model.SingleQuestions[0].CorrectAnswer, 3)
                </div>
            </div>
            <div class="form-group single-question-option">
                <label class="control-label col-md-2">选项D</label>
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.SingleQuestions[0].Options[3].OptionProperty, 1, 10, htmlAttributes: new { @class = "form-control", placeholder = "在这里输入选项D内容" })
                    @Html.ValidationMessageFor(model => model.SingleQuestions[0].Options[3].OptionProperty, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.RadioButtonFor(model => model.SingleQuestions[0].CorrectAnswer, 4)
                </div>
            </div>
            <div class="form-group" id="single-question-createpanel">
                <div class="col-md-10 col-md-offset-2">
                    <input type="button" id="createsq" value="添加单选题" class="btn btn-primary" />
                </div>
            </div>
        </div>

        <div class="multiple-question">
            <h4>多选题</h4>
            <div class="form-group multiple-question-content">
                @Html.LabelFor(model => model.MultipleQuestions[0].Content, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.MultipleQuestions[0].Content, 3, 10, htmlAttributes: new { @class = "form-control", placeholder = "在这里输入题目内容" })
                    @Html.ValidationMessageFor(model => model.MultipleQuestions[0].Content, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group multiple-question-option">
                <label class="control-label col-md-2">选项A</label>
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.MultipleQuestions[0].Options[0].OptionProperty, 1, 10, htmlAttributes: new { @class = "form-control", placeholder = "在这里输入选项内容" })
                    @Html.ValidationMessageFor(model => model.MultipleQuestions[0].Options[0].OptionProperty, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    该选项是否正确？
                    @Html.EditorFor(model => model.MultipleQuestions[0].Options[0].IsCorrect)
                    @Html.ValidationMessageFor(model => model.MultipleQuestions[0].Options[0].IsCorrect, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10 col-md-offset-2">
                    <input type="button" value="添加选项" class="btn btn-warning multiple-question-option-create" />
                </div>
            </div>
            <div class="form-group" id="multiple-question-createpanel">
                <div class="col-md-10 col-md-offset-2">
                    <input type="button" id="createmq" value="添加选项" class="btn btn-primary" />
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
