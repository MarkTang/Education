@model Education.ViewModels.PaperViewModel

@{
    ViewBag.Title = "新建试卷";
}

<h2>@ViewBag.Title</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <h4>判断题</h4>
        @for (int i = 0; i < Model.TrueOrFalseQuestions.Count; i++)
        {

            <div class="trueorfalse-question" id="tq@(i)">
                <div class="form-group trueorfalse-quesion-content">
                    @Html.LabelFor(model => model.TrueOrFalseQuestions[i].Content, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.TrueOrFalseQuestions[i].Content, 3, 10, htmlAttributes: new { @class = "form-control", placeholder = "在这里输入题目内容" })
                        @Html.ValidationMessageFor(model => model.TrueOrFalseQuestions[i].Content, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group trueorfalse-quesion-answer">
                    @Html.LabelFor(model => model.TrueOrFalseQuestions[i].IsCorrect, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TrueOrFalseQuestions[i].IsCorrect)
                        @Html.ValidationMessageFor(model => model.TrueOrFalseQuestions[i].IsCorrect, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }
        <div class="form-group" id="trueorfalse-question-createpanel">
            <div class="col-md-10 col-md-offset-2">
                <input type="button" id="createtq" value="添加判断题" class="btn btn-primary" />
            </div>
        </div>
        <h4>单选题</h4>
        @for (int i = 0; i < Model.SingleQuestions.Count; i++)
        {
            <div class="single-question" id="sq@(i)">
                <div class="form-group single-question-content">
                    @Html.LabelFor(model => model.SingleQuestions[i].Content, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.SingleQuestions[i].Content, 3, 10, htmlAttributes: new { @class = "form-control", placeholder = "在这里输入题目内容" })
                        @Html.ValidationMessageFor(model => model.SingleQuestions[i].Content, "", new { @class = "text-danger" })
                    </div>
                </div>
                @Html.HiddenFor(model => model.SingleQuestions[i].Options[0].OptionId)
                <div class="form-group single-question-option">
                    <label class="control-label col-md-2">@Html.DisplayFor(model => model.SingleQuestions[i].Options[0].OptionId)</label>
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.SingleQuestions[i].Options[0].OptionProperty, 1, 10, htmlAttributes: new { @class = "form-control", placeholder = "在这里输入选项A内容" })
                        @Html.ValidationMessageFor(model => model.SingleQuestions[i].Options[0].OptionProperty, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        该选项是否正确？
                        @Html.RadioButtonFor(model => model.SingleQuestions[i].CorrectAnswer, 1)
                    </div>
                </div>
                @Html.HiddenFor(model => model.SingleQuestions[i].Options[1].OptionId)
                <div class="form-group single-question-option">
                    <label class="control-label col-md-2">@Html.DisplayFor(model => model.SingleQuestions[i].Options[1].OptionId)</label>
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.SingleQuestions[i].Options[1].OptionProperty, 1, 10, htmlAttributes: new { @class = "form-control", placeholder = "在这里输入选项B内容" })
                        @Html.ValidationMessageFor(model => model.SingleQuestions[i].Options[1].OptionProperty, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        该选项是否正确？
                        @Html.RadioButtonFor(model => model.SingleQuestions[i].CorrectAnswer, 2)
                    </div>
                </div>
                @Html.HiddenFor(model => model.SingleQuestions[i].Options[2].OptionId)
                <div class="form-group single-question-option">
                    <label class="control-label col-md-2">@Html.DisplayFor(model => model.SingleQuestions[i].Options[2].OptionId)</label>
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.SingleQuestions[i].Options[2].OptionProperty, 1, 10, htmlAttributes: new { @class = "form-control", placeholder = "在这里输入选项C内容" })
                        @Html.ValidationMessageFor(model => model.SingleQuestions[i].Options[2].OptionProperty, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        该选项是否正确？
                        @Html.RadioButtonFor(model => model.SingleQuestions[i].CorrectAnswer, 3)
                    </div>
                </div>
                @Html.HiddenFor(model => model.SingleQuestions[i].Options[3].OptionId)
                <div class="form-group single-question-option">
                    <label class="control-label col-md-2">@Html.DisplayFor(model => model.SingleQuestions[i].Options[3].OptionId)</label>
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.SingleQuestions[i].Options[3].OptionProperty, 1, 10, htmlAttributes: new { @class = "form-control", placeholder = "在这里输入选项D内容" })
                        @Html.ValidationMessageFor(model => model.SingleQuestions[i].Options[3].OptionProperty, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        该选项是否正确？
                        @Html.RadioButtonFor(model => model.SingleQuestions[i].CorrectAnswer, 4)
                    </div>
                </div>
            </div>
        }
        <div class="form-group" id="single-question-createpanel">
            <div class="col-md-10 col-md-offset-2">
                <input type="button" id="createsq" value="添加单选题" class="btn btn-primary" />
            </div>
        </div>
        <h4>多选题</h4>
        @for (int i = 0; i < Model.MultipleQuestions.Count; i++)
        {
            @Html.HiddenFor(model => model.MultipleQuestions[i].Id)
            <div class="multiple-question" id="mq@(i)">
                <div class="form-group multiple-question-content">
                    @Html.LabelFor(model => model.MultipleQuestions[i].Content, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.MultipleQuestions[i].Content, 3, 10, htmlAttributes: new { @class = "form-control", placeholder = "在这里输入题目内容" })
                        @Html.ValidationMessageFor(model => model.MultipleQuestions[i].Content, "", new { @class = "text-danger" })
                    </div>
                </div>
                @for (int j = 0; j < Model.MultipleQuestions[i].Options.Count; j++)
                {
                    @Html.HiddenFor(model => model.MultipleQuestions[i].Options[j].OptionId)
                    <div class="form-group multiple-question-option">
                        <label class="control-label col-md-2">@Html.DisplayFor(model => model.MultipleQuestions[i].Options[j].OptionId)</label>
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.MultipleQuestions[i].Options[j].OptionProperty, 1, 10, htmlAttributes: new { @class = "form-control", placeholder = "在这里输入选项A内容" })
                            @Html.ValidationMessageFor(model => model.MultipleQuestions[i].Options[j].OptionProperty, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            该选项是否正确？
                            @Html.EditorFor(model => model.MultipleQuestions[i].Options[j].IsCorrect)
                            @Html.ValidationMessageFor(model => model.MultipleQuestions[i].Options[j].IsCorrect, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                <div class="form-group multiple-option-createpanel">
                    <div class="col-md-10 col-md-offset-2">
                        <input type="button" value="添加选项" class="btn btn-warning multiple-option-createbutton" />
                    </div>
                </div>
            </div>
        }
        <div class="form-group" id="multiple-question-createpanel">
            <div class="col-md-10 col-md-offset-2">
                <input type="button" id="createmq" value="添加多选题" class="btn btn-primary" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="确定" class="btn btn-success btn-lg" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/addquestion.js"></script>
}
